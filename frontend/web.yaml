apiVersion: apps/v1
kind: Deployment
metadata:
  name: myweb
spec:
  selector:
    matchLabels:
      app: myweb
  template:
    metadata:
      labels:
        app: myweb
    spec:
      # nodeSelector:
      #   intent: apps
      # topologySpreadConstraints:
      #   - maxSkew: 1
      #     topologyKey: capacity-spread
      #     whenUnsatisfiable: DoNotSchedule    
      #     labelSelector:
      #       matchLabels:
      #         app: inflate-weight  
      containers:
      - name: myweb
        image: web-cicd
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf
        - name: nginx-logs
          mountPath: /var/log/nginx
        resources:
          requests:
            cpu: "100m"
          limits:
            cpu: "200m"
      - name: filebeat
        image: 062061726924.dkr.ecr.ap-northeast-2.amazonaws.com/filebeat:arm
        volumeMounts:
        - name: nginx-logs
          mountPath: /var/log/nginx
        resources:
          requests:
            cpu: "250m"
          limits:
            cpu: "500m"
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf  # 여기서는 존재하는 ConfigMap의 이름이어야 합니다.
      - name: nginx-logs
        emptyDir: {}  # 일시적인 데이터 저장을 위한 emptyDir 볼륨

---
apiVersion: v1
kind: Service
metadata:
  name: myweb-svc
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: "/"
spec:
  selector:
    app: myweb
  ports:
  - port: 80
    targetPort: 80
  type: NodePort